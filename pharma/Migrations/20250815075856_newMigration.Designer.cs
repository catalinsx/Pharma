// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pharma.Data;

#nullable disable

namespace pharma.Migrations
{
    [DbContext(typeof(PharmaContext))]
    [Migration("20250815075856_newMigration")]
    partial class newMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("pharma.Models.Medicament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medicamente");
                });

            modelBuilder.Entity("pharma.Models.Pacient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlteDetalii")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CNP")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<DateTime?>("DataUrmatoareiVizite")
                        .HasColumnType("datetime2");

                    b.Property<string>("NrTelefon")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Pacienti");
                });

            modelBuilder.Entity("pharma.Models.PacientMedicament", b =>
                {
                    b.Property<int>("PacientId")
                        .HasColumnType("int");

                    b.Property<int>("MedicamentId")
                        .HasColumnType("int");

                    b.Property<string>("CantitateCutii")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAsocierii")
                        .HasColumnType("datetime2");

                    b.HasKey("PacientId", "MedicamentId");

                    b.HasIndex("MedicamentId");

                    b.ToTable("PacientMedicamente");
                });

            modelBuilder.Entity("pharma.Models.Reteta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUrmatoareiVizite")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicamentId")
                        .HasColumnType("int");

                    b.Property<string>("NrReteta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observatii")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacientId")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedicamentId");

                    b.HasIndex("PacientId");

                    b.ToTable("Retete");
                });

            modelBuilder.Entity("pharma.Models.PacientMedicament", b =>
                {
                    b.HasOne("pharma.Models.Medicament", "Medicament")
                        .WithMany("PacientMedicamente")
                        .HasForeignKey("MedicamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pharma.Models.Pacient", "Pacient")
                        .WithMany("PacientMedicamente")
                        .HasForeignKey("PacientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Pacient");
                });

            modelBuilder.Entity("pharma.Models.Reteta", b =>
                {
                    b.HasOne("pharma.Models.Medicament", "medicament")
                        .WithMany("Retete")
                        .HasForeignKey("MedicamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pharma.Models.Pacient", "pacient")
                        .WithMany("Retete")
                        .HasForeignKey("PacientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("medicament");

                    b.Navigation("pacient");
                });

            modelBuilder.Entity("pharma.Models.Medicament", b =>
                {
                    b.Navigation("PacientMedicamente");

                    b.Navigation("Retete");
                });

            modelBuilder.Entity("pharma.Models.Pacient", b =>
                {
                    b.Navigation("PacientMedicamente");

                    b.Navigation("Retete");
                });
#pragma warning restore 612, 618
        }
    }
}
