@model IEnumerable<pharma.Models.Reteta>

@{
    ViewData["Title"] = ViewBag.MedicamentNume != null ? $"Rețete - {ViewBag.MedicamentNume}" : "Toate rețetele";
    var medicamentId = ViewContext.HttpContext.Request.Query["medId"].FirstOrDefault();
    var today = DateTime.Today;

    // Pagination parameters from ViewBag
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var totalItems = ViewBag.TotalItems ?? Model.Count();
    var pageSize = ViewBag.PageSize ?? 50;

    // Filter parameters from ViewBag
    var currentSearch = ViewBag.Search ?? "";
    var currentDateFrom = ViewBag.DateFrom ?? "";
    var currentDateTo = ViewBag.DateTo ?? "";
    var currentVisitFilter = ViewBag.VisitFilter ?? "";
    var currentSortBy = ViewBag.SortBy ?? "data-desc";

    var pagedItems = Model; // Items are already paged from controller
}

<!-- Header cu gradient și statistici -->
<div class="page-header-gradient mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h2 class="mb-2 text-white">
                <i class="fas fa-file-medical me-2"></i>
                @if (ViewBag.MedicamentNume != null)
                {
                    <span>Rețete - <strong>@ViewBag.MedicamentNume</strong></span>
                }
                else
                {
                    <span>Listă Rețete</span>
                }
            </h2>
            <div class="d-flex gap-3">
                <div class="stat-card-mini">
                    <div class="stat-number">@totalItems</div>
                    <div class="stat-label">Total rețete</div>
                </div>
                <div class="stat-card-mini">
                    <div class="stat-number">@Model.Count(r => r.DataUrmatoareiVizite?.Month == DateTime.Now.Month)</div>
                    <div class="stat-label">Luna aceasta</div>
                </div>
                <div class="stat-card-mini">
                    <div class="stat-number">@currentPage</div>
                    <div class="stat-label">Pagina @currentPage din @totalPages</div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Enhanced Filters Card -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body">
        <form method="get" asp-action="Index" id="filterForm">
            <input type="hidden" name="medId" value="@medicamentId" />
            <input type="hidden" name="page" value="1" />
            
            <div class="row g-3">
                <!-- Text Search -->
                <div class="col-lg-3">
                    <div class="search-box">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" name="search" value="@currentSearch" 
                               class="form-control form-control-lg ps-5"
                               placeholder="Caută pacient, serie, număr..."
                               autocomplete="off">
                    </div>
                </div>

                <!-- Date Range -->
                <div class="col-lg-2">
                    <input type="date" name="dateFrom" value="@currentDateFrom" 
                           class="form-control form-control-lg" title="De la data">
                </div>
                <div class="col-lg-2">
                    <input type="date" name="dateTo" value="@currentDateTo" 
                           class="form-control form-control-lg" title="Până la data">
                </div>

                <!-- Next Visit Filter -->
                <div class="col-lg-2">
                    <select name="visitFilter" class="form-select form-select-lg">
                        <option value="" selected="@(string.IsNullOrEmpty(currentVisitFilter))">Toate vizitele</option>
                        <option value="cu-vizite" selected="@(currentVisitFilter == "cu-vizite")">Cu vizite programate</option>
                        <option value="fara-vizite" selected="@(currentVisitFilter == "fara-vizite")">Fără vizite</option>
                        <option value="saptamana" selected="@(currentVisitFilter == "saptamana")">Săptămâna aceasta</option>
                        <option value="luna" selected="@(currentVisitFilter == "luna")">Luna aceasta</option>
                        <option value="luna-viitoare" selected="@(currentVisitFilter == "luna-viitoare")">Luna viitoare</option>
                    </select>
                </div>

                <!-- Sort -->
                <div class="col-lg-2">
                    <select name="sortBy" class="form-select form-select-lg">
                        <option value="data-desc" selected="@(currentSortBy == "data-desc")">Data (recent)</option>
                        <option value="data-asc" selected="@(currentSortBy == "data-asc")">Data (vechi)</option>
                        <option value="pacient-asc" selected="@(currentSortBy == "pacient-asc")">Pacient (A-Z)</option>
                        <option value="pacient-desc" selected="@(currentSortBy == "pacient-desc")">Pacient (Z-A)</option>
                        <option value="vizita-asc" selected="@(currentSortBy == "vizita-asc")">Vizită (apropiată)</option>
                        <option value="vizita-desc" selected="@(currentSortBy == "vizita-desc")">Vizită (îndepărtată)</option>
                    </select>
                </div>


                <!-- Filter button -->
                <div class="col-lg-1">
                    <button type="submit" class="btn btn-primary btn-lg w-100" title="Filtrează">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>

            <!-- Quick Filter Pills -->
            <div class="mt-3 d-flex flex-wrap gap-2">
                <button type="button" class="btn btn-sm btn-outline-primary quick-filter" data-filter="today">
                    <i class="fas fa-calendar-day me-1"></i>Astăzi
                </button>
                <button type="button" class="btn btn-sm btn-outline-info quick-filter" data-filter="this-week">
                    <i class="fas fa-calendar-week me-1"></i>Săptămâna aceasta
                </button>
                <button type="button" class="btn btn-sm btn-outline-success quick-filter" data-filter="this-month">
                    <i class="fas fa-calendar-alt me-1"></i>Luna aceasta
                </button>
                <button type="button" class="btn btn-sm btn-outline-warning quick-filter" data-filter="next-month">
                    <i class="fas fa-calendar-plus me-1"></i>Luna viitoare
                </button>
                <button type="button" class="btn btn-sm btn-outline-secondary quick-filter" data-filter="no-visits">
                    <i class="fas fa-calendar-times me-1"></i>Fără vizite
                </button>
                <a href="@Url.Action("Index", new { medId = medicamentId })" class="btn btn-sm btn-outline-secondary">
                    <i class="fas fa-eraser me-1"></i>Șterge filtrele
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Results Table -->
@if (totalItems > 0)
{
    <div class="card border-0 shadow-sm" id="tableContainer">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="reteteTabel">
                    <thead style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                        <tr>
                            <th width="12%" class="text-white border-0">
                                <i class="fas fa-calendar me-1"></i>Data
                            </th>
                            <th width="25%" class="text-white border-0">
                                <i class="fas fa-user me-1"></i>Pacient
                            </th>
                            @if (ViewBag.MedicamentNume == null)
                            {
                                <th width="15%" class="text-white border-0">
                                    <i class="fas fa-pills me-1"></i>Medicament
                                </th>
                            }
                            <th width="10%" class="text-white border-0">Serie</th>
                            <th width="10%" class="text-white border-0">Nr. rețetă</th>
                            <th width="15%" class="text-white border-0">
                                <i class="fas fa-clock me-1"></i>Următoarea vizită
                            </th>
                            <th width="13%" class="text-center text-white border-0">Acțiuni</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var reteta in pagedItems)
                        {
                            var daysUntilVisit = reteta.DataUrmatoareiVizite.HasValue ?
                            (reteta.DataUrmatoareiVizite.Value - today).Days : (int?)null;
                            var rowClass = "";
                            if (daysUntilVisit.HasValue)
                            {
                                if (daysUntilVisit < 0) rowClass = "table-row-expired";
                                else if (daysUntilVisit == 0) rowClass = "table-row-today";
                                else if (daysUntilVisit <= 7) rowClass = "table-row-soon";
                            }

                            <tr class="reteta-row @rowClass">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="date-badge me-2">
                                            <div class="date-day">@reteta.Data.Day.ToString("00")</div>
                                            <div class="date-month">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName(reteta.Data.Month)</div>
                                        </div>
                                        <small class="text-muted">@reteta.Data.Year</small>
                                    </div>
                                </td>

                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="avatar-circle me-2">
                                            @if (reteta.pacient != null && !string.IsNullOrEmpty(reteta.pacient.Nume) && !string.IsNullOrEmpty(reteta.pacient.Prenume))
                                            {
                                                <span>@reteta.pacient.Nume.Substring(0, 1)@reteta.pacient.Prenume.Substring(0, 1)</span>
                                            }
                                            else
                                            {
                                                <span>?</span>
                                            }
                                        </div>
                                        <div>
                                            <strong>@reteta.pacient?.Nume @reteta.pacient?.Prenume</strong>
                                            @if (reteta.pacient?.Id != null)
                                            {
                                                <br>
                                                <small class="text-muted">ID: #@reteta.pacient.Id</small>
                                            }
                                        </div>
                                    </div>
                                </td>

                                @if (ViewBag.MedicamentNume == null)
                                {
                                    <td>
                                        <span class="badge bg-gradient-info text-white">
                                            <i class="fas fa-pills me-1"></i>@reteta.medicament?.Nume
                                        </span>
                                    </td>
                                }

                                <td>
                                    @if (!string.IsNullOrEmpty(reteta.Serie))
                                    {
                                        <code class="text-primary">@reteta.Serie</code>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>

                                <td>
                                    @if (!string.IsNullOrEmpty(reteta.NrReteta))
                                    {
                                        <code class="text-primary">@reteta.NrReteta</code>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>

                                <td>
                                    @if (reteta.DataUrmatoareiVizite.HasValue)
                                    {
                                        <div class="next-visit-badge">
                                            <i class="fas fa-calendar-check me-1"></i>
                                            <span>@reteta.DataUrmatoareiVizite.Value.ToString("dd.MM.yyyy")</span>
                                            @if (daysUntilVisit.HasValue)
                                            {
                                                if (daysUntilVisit == 0)
                                                {
                                                    <span class="badge bg-warning ms-2">Astăzi</span>
                                                }
                                                else if (daysUntilVisit > 0 && daysUntilVisit <= 7)
                                                {
                                                    <span class="badge bg-info ms-2">@daysUntilVisit zile</span>
                                                }
                                                else if (daysUntilVisit < 0)
                                                {
                                                    <span class="badge bg-danger ms-2">Întârziat</span>
                                                }
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted fst-italic">
                                            <i class="fas fa-calendar-times me-1"></i>Neprogramat
                                        </span>
                                    }
                                </td>

                                <td class="text-center">
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a asp-action="Edit" asp-route-id="@reteta.Id"
                                           class="btn btn-outline-warning" title="Editează">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button type="button" class="btn btn-outline-danger delete-btn"
                                                data-reteta-id="@reteta.Id"
                                                data-pacient="@reteta.pacient?.Nume @reteta.pacient?.Prenume"
                                                data-medicament="@reteta.medicament?.Nume"
                                                data-data="@reteta.Data.ToString("dd.MM.yyyy")"
                                                data-med-id="@medicamentId"
                                                title="Șterge">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination - Întotdeauna afișată dacă sunt mai mult de 1 pagini -->
        @if (totalPages > 1)
        {
            <div class="card-footer bg-light">
                <nav aria-label="Paginare">
                    <ul class="pagination justify-content-center mb-0">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { 
                                    page = currentPage - 1, 
                                    medId = medicamentId,
                                    search = currentSearch,
                                    dateFrom = currentDateFrom,
                                    dateTo = currentDateTo,
                                    visitFilter = currentVisitFilter,
                                    sortBy = currentSortBy
                                })">
                                    <i class="fas fa-angle-left me-1"></i> Previous
                                </a>
                            </li>
                        }

                        @{
                            var startPage = Math.Max(1, currentPage - 2);
                            var endPage = Math.Min(totalPages, currentPage + 2);
                        }

                        @if (startPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { 
                                    page = 1, 
                                    medId = medicamentId,
                                    search = currentSearch,
                                    dateFrom = currentDateFrom,
                                    dateTo = currentDateTo,
                                    visitFilter = currentVisitFilter,
                                    sortBy = currentSortBy
                                })">1</a>
                            </li>
                            @if (startPage > 2)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                        }

                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { 
                                    page = i, 
                                    medId = medicamentId,
                                    search = currentSearch,
                                    dateFrom = currentDateFrom,
                                    dateTo = currentDateTo,
                                    visitFilter = currentVisitFilter,
                                    sortBy = currentSortBy
                                })">@i</a>
                            </li>
                        }

                        @if (endPage < totalPages)
                        {
                            @if (endPage < totalPages - 1)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { 
                                    page = totalPages, 
                                    medId = medicamentId,
                                    search = currentSearch,
                                    dateFrom = currentDateFrom,
                                    dateTo = currentDateTo,
                                    visitFilter = currentVisitFilter,
                                    sortBy = currentSortBy
                                })">@totalPages</a>
                            </li>
                        }

                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { 
                                    page = currentPage + 1, 
                                    medId = medicamentId,
                                    search = currentSearch,
                                    dateFrom = currentDateFrom,
                                    dateTo = currentDateTo,
                                    visitFilter = currentVisitFilter,
                                    sortBy = currentSortBy
                                })">
                                    Next <i class="fas fa-angle-right ms-1"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>

                <!-- Pagination info -->
                <div class="text-center mt-2 text-muted small">
                    Afișând @((currentPage - 1) * pageSize + 1) - @(Math.Min(currentPage * pageSize, totalItems)) din @totalItems rețete
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="text-center py-5">
        <div class="empty-state">
            <i class="fas fa-file-medical fa-4x text-muted mb-3"></i>
            <h4 class="text-muted">Nu există rețete</h4>
            @if (!string.IsNullOrEmpty(medicamentId))
            {
                <a asp-action="Create" asp-route-medId="@medicamentId" class="btn btn-primary mt-3">
                    <i class="fas fa-plus me-1"></i> Adaugă prima rețetă
                </a>
            }
        </div>
    </div>
}

<!-- Universal Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Confirmare ștergere
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Vrei să ștergi definitiv această rețetă?</p>
                <ul class="list-unstyled" id="deleteDetails">
                    <!-- Details will be populated by JavaScript -->
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anulează</button>
                <form asp-action="Delete" asp-controller="Reteta" method="post" class="d-inline" id="deleteForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteId" />
                    <input type="hidden" name="returnMedId" id="deleteMedId" />
                    <button type="submit" class="btn btn-danger" id="confirmDelete">
                        <i class="fas fa-trash me-1"></i> Șterge
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Delete functionality
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            const deleteButtons = document.querySelectorAll('.delete-btn');

            deleteButtons.forEach(btn => {
                btn.addEventListener('click', function () {
                    const retetaId = this.dataset.retetaId;
                    const pacient = this.dataset.pacient;
                    const medicament = this.dataset.medicament;
                    const data = this.dataset.data;
                    const medId = this.dataset.medId;

                    // Populate modal with data
                    document.getElementById('deleteId').value = retetaId;
                    document.getElementById('deleteMedId').value = medId || '';

                    const details = document.getElementById('deleteDetails');
                    details.innerHTML = `
                        <li><strong>Data:</strong> ${data}</li>
                        <li><strong>Pacient:</strong> ${pacient}</li>
                        <li><strong>Medicament:</strong> ${medicament}</li>
                    `;

                    deleteModal.show();
                });
            });

            // Quick filters functionality
            const quickFilters = document.querySelectorAll('.quick-filter');
            const form = document.getElementById('filterForm');
            const searchInput = form.querySelector('input[name="search"]');
            const dateFromInput = form.querySelector('input[name="dateFrom"]');
            const dateToInput = form.querySelector('input[name="dateTo"]');
            const visitFilterSelect = form.querySelector('select[name="visitFilter"]');

            quickFilters.forEach(btn => {
                btn.addEventListener('click', function () {
                    // Remove active class from all
                    quickFilters.forEach(b => b.classList.remove('active'));
                    this.classList.add('active');

                    const filter = this.dataset.filter;

                    // Reset other filters
                    searchInput.value = '';
                    dateFromInput.value = '';
                    dateToInput.value = '';
                    visitFilterSelect.value = '';

                    switch (filter) {
                        case 'today':
                            const today = new Date().toISOString().split('T')[0];
                            dateFromInput.value = today;
                            dateToInput.value = today;
                            break;
                        case 'this-week':
                            visitFilterSelect.value = 'saptamana';
                            break;
                        case 'this-month':
                            visitFilterSelect.value = 'luna';
                            break;
                        case 'next-month':
                            visitFilterSelect.value = 'luna-viitoare';
                            break;
                        case 'no-visits':
                            visitFilterSelect.value = 'fara-vizite';
                            break;
                    }

                    // Submit form
                    form.submit();
                });
            });

            // Auto-submit form on filter changes (optional)
            const filterInputs = form.querySelectorAll('input, select');
            filterInputs.forEach(input => {
                if (input.name !== 'page') { // Don't auto-submit on page changes
                    input.addEventListener('change', function() {
                        // Reset to page 1 when filtering
                        form.querySelector('input[name="page"]').value = 1;
                        // Optional: auto-submit (remove this if you prefer manual submission)
                        // form.submit();
                    });
                }
            });
        });
    </script>
}

<style>
    /* Page header gradient */
    .page-header-gradient {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 2rem;
        border-radius: 12px;
        color: white;
    }

    /* Mini stat cards in header */
    .stat-card-mini {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        text-align: center;
    }

        .stat-card-mini .stat-number {
            font-size: 1.5rem;
            font-weight: 700;
            color: white;
        }

        .stat-card-mini .stat-label {
            font-size: 0.75rem;
            text-transform: uppercase;
            opacity: 0.9;
            color: white;
        }

    /* Pagination styling */
    .pagination .page-link {
        border-radius: 8px;
        margin: 0 2px;
        color: #667eea;
        border: 1px solid #dee2e6;
    }

    .pagination .page-item.active .page-link {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-color: transparent;
    }

    .pagination .page-link:hover {
        color: #667eea;
        background-color: #f8f9fa;
        border-color: #dee2e6;
    }

    /* Search box styling */
    .search-box {
        position: relative;
    }

    .search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
        z-index: 1;
    }

    /* Enhanced table styling */
    .table {
        font-size: 0.9rem;
    }

    .table thead th {
        border: none !important;
        font-weight: 600;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        padding: 1rem 0.75rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
        color: white !important;
    }

    .table tbody td {
        vertical-align: middle;
        padding: 0.75rem;
        border-color: #f1f3f5;
    }

    /* Row status colors */
    .table-row-expired {
        background-color: rgba(220, 53, 69, 0.05);
    }

    .table-row-today {
        background-color: rgba(255, 193, 7, 0.1);
        font-weight: 500;
    }

    .table-row-soon {
        background-color: rgba(13, 202, 240, 0.05);
    }

    .reteta-row:hover {
        background-color: rgba(0, 123, 255, 0.05) !important;
        transform: translateX(2px);
        transition: all 0.2s ease;
    }

    /* Date badge styling */
    .date-badge {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 4px 8px;
        text-align: center;
        min-width: 45px;
        border: 1px solid #dee2e6;
    }

    .date-day {
        font-weight: 700;
        font-size: 1.1rem;
        color: #495057;
    }

    .date-month {
        font-size: 0.7rem;
        text-transform: uppercase;
        color: #6c757d;
    }

    /* Avatar circle */
    .avatar-circle {
        width: 35px;
        height: 35px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        font-size: 0.8rem;
    }

    /* Enhanced badges */
    .badge {
        padding: 0.35em 0.65em;
        font-weight: 500;
    }

    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .bg-gradient-info {
        background: linear-gradient(135deg, #0dcaf0 0%, #0aa2c0 100%);
    }

    .bg-gradient-success {
        background: linear-gradient(135deg, #198754 0%, #157347 100%);
    }

    .bg-gradient-secondary {
        background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
    }

    /* Card styling */
    .card {
        border-radius: 12px;
        overflow: hidden;
    }

    /* Input styling */
    .form-control, .form-select {
        border-radius: 10px;
        border: 2px solid #e9ecef;
        font-size: 0.95rem;
        transition: all 0.2s ease;
    }

        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

    .form-control-lg, .form-select-lg {
        padding: 0.75rem 1rem;
    }

    /* Button styling */
    .btn {
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.2s ease;
    }

        .btn:hover {
            transform: translateY(-2px);
        }

    .btn-group-sm .btn {
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
        border-radius: 6px !important;
        margin: 0 2px;
    }

    .btn-outline-warning:hover {
        color: #fff;
    }

    .btn-outline-danger:hover {
        color: #fff;
    }

    /* Quick filter pills */
    .quick-filter {
        border-radius: 20px;
        padding: 0.375rem 0.875rem;
        font-weight: 500;
        transition: all 0.2s ease;
    }

    .quick-filter:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .quick-filter.active {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }

    /* Next visit badge */
    .next-visit-badge {
        font-size: 0.9rem;
    }

    /* Code styling */
    code {
        padding: 0.2rem 0.4rem;
        font-size: 0.875rem;
        background-color: rgba(102, 126, 234, 0.1);
        border-radius: 4px;
    }

    /* Empty state */
    .empty-state {
        padding: 3rem;
        background: #f8f9fa;
        border-radius: 12px;
    }

    /* Modal styling */
    .modal-content {
        border-radius: 12px;
        border: none;
        box-shadow: 0 10px 40px rgba(0,0,0,0.15);
    }

    .modal-header {
        border-radius: 12px 12px 0 0;
    }

    /* Shadow utilities */
    .shadow-sm {
        box-shadow: 0 0.125rem 0.5rem rgba(0, 0, 0, 0.075) !important;
    }

    /* Card footer */
    .card-footer {
        background-color: #f8f9fa !important;
        border-top: 1px solid #dee2e6 !important;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .page-header-gradient {
            padding: 1rem;
        }

        .stat-card-mini {
            padding: 0.5rem 1rem;
        }

        .table {
            font-size: 0.8rem;
        }
        
        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }

        .pagination .page-link {
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
        }
    }
    </style>
