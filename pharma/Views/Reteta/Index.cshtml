@model IEnumerable<pharma.Models.Reteta>

@{
    ViewData["Title"] = ViewBag.MedicamentNume != null ? $"Rețete - {ViewBag.MedicamentNume}" : "Toate rețetele";
    var medicamentId = ViewContext.HttpContext.Request.Query["medId"].FirstOrDefault();
    var today = DateTime.Today;
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-file-medical me-2 text-primary"></i>
                        @if (ViewBag.MedicamentNume != null)
                        {
                            <span>Rețete pentru <strong class="text-primary">@ViewBag.MedicamentNume</strong></span>
                        }
                        else
                        {
                            <span>Toate rețetele</span>
                        }
                    </h2>
                    <p class="text-muted mb-0">
                        <span class="badge bg-primary me-2">@Model.Count() total</span>
                        <span class="badge bg-success me-2">@Model.Count(r => r.DataUrmatoareiVizite.HasValue) cu vizite programate</span>
                        <span class="badge bg-info">@Model.Count(r => r.DataUrmatoareiVizite?.Month == DateTime.Now.Month) luna aceasta</span>
                    </p>
                </div>
                <div>
                    @if (!string.IsNullOrEmpty(medicamentId))
                    {
                        <a asp-controller="Medicament" asp-action="Details" asp-route-id="@medicamentId"
                           class="btn btn-outline-secondary me-2">
                            <i class="fas fa-arrow-left me-1"></i> Înapoi
                        </a>
                        <a asp-action="Create" asp-route-medId="@medicamentId"
                           class="btn btn-primary shadow-sm">
                            <i class="fas fa-plus me-1"></i> Rețetă nouă
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Filters Card -->
    <div class="card shadow-sm mb-4 border-0">
        <div class="card-header bg-gradient-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h6 class="mb-0">
                    <i class="fas fa-filter me-2"></i>
                    Filtrare și sortare
                </h6>
                <small id="activeFiltersCount"></small>
            </div>
        </div>
        <div class="card-body bg-light">
            <div class="row g-3">
                <!-- Text Search -->
                <div class="col-lg-3">
                    <div class="input-group">
                        <span class="input-group-text bg-white">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text" id="searchGeneral" class="form-control border-start-0" 
                               placeholder="Caută pacient, serie, număr...">
                    </div>
                </div>
                
                <!-- Date Range -->
                <div class="col-lg-2">
                    <div class="input-group">
                        <span class="input-group-text bg-white">
                            <i class="fas fa-calendar-alt text-muted"></i>
                        </span>
                        <input type="date" id="dateFrom" class="form-control border-start-0">
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="input-group">
                        <span class="input-group-text bg-white">
                            <i class="fas fa-calendar-check text-muted"></i>
                        </span>
                        <input type="date" id="dateTo" class="form-control border-start-0">
                    </div>
                </div>
                
                <!-- Next Visit Filter -->
                <div class="col-lg-2">
                    <select id="filterVizite" class="form-select">
                        <option value="">Toate vizitele</option>
                        <option value="cu-vizite">Cu vizite programate</option>
                        <option value="fara-vizite">Fără vizite</option>
                        <option value="saptamana">Săptămâna aceasta</option>
                        <option value="luna">Luna aceasta</option>
                        <option value="luna-viitoare">Luna viitoare</option>
                    </select>
                </div>
                
                <!-- Sort -->
                <div class="col-lg-2">
                    <select id="sortBy" class="form-select">
                        <option value="data-desc">📅 Data (recent)</option>
                        <option value="data-asc">📅 Data (vechi)</option>
                        <option value="pacient-asc">👤 Pacient (A-Z)</option>
                        <option value="pacient-desc">👤 Pacient (Z-A)</option>
                        <option value="vizita-asc">⏰ Vizită (apropiată)</option>
                        <option value="vizita-desc">⏰ Vizită (îndepărtată)</option>
                    </select>
                </div>
                
                <!-- Clear button -->
                <div class="col-lg-1">
                    <button type="button" id="clearFilters" class="btn btn-outline-danger w-100" title="Șterge filtrele">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>

            <!-- Quick Filter Pills -->
            <div class="row mt-3">
                <div class="col">
                    <div class="d-flex flex-wrap gap-2">
                        <button type="button" class="btn btn-sm btn-outline-primary quick-filter" data-filter="today">
                            <i class="fas fa-calendar-day me-1"></i>Astăzi
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-info quick-filter" data-filter="this-week">
                            <i class="fas fa-calendar-week me-1"></i>Săptămâna aceasta
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-success quick-filter" data-filter="this-month">
                            <i class="fas fa-calendar-alt me-1"></i>Luna aceasta
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-warning quick-filter" data-filter="next-month">
                            <i class="fas fa-calendar-plus me-1"></i>Luna viitoare
                        </button>
                        <button type="button" class="btn btn-sm btn-outline-secondary quick-filter" data-filter="no-visits">
                            <i class="fas fa-calendar-times me-1"></i>Fără vizite
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Table with Better Styling -->
    <div class="row">
        <div class="col">
            @if (Model.Any())
            {
                <div class="card shadow-sm border-0">
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0" id="reteteTabel">
                                <thead style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                                    <tr>
                                        <th width="12%" class="text-white border-0">
                                            <i class="fas fa-calendar me-1"></i>Data
                                        </th>
                                        <th width="25%" class="text-white border-0">
                                            <i class="fas fa-user me-1"></i>Pacient
                                        </th>
                                        @if (ViewBag.MedicamentNume == null)
                                        {
                                            <th width="15%" class="text-white border-0">
                                                <i class="fas fa-pills me-1"></i>Medicament
                                            </th>
                                        }
                                        <th width="10%" class="text-white border-0">Serie</th>
                                        <th width="10%" class="text-white border-0">Nr. rețetă</th>
                                        <th width="15%" class="text-white border-0">
                                            <i class="fas fa-clock me-1"></i>Următoarea vizită
                                        </th>
                                        <th width="13%" class="text-center text-white border-0">Acțiuni</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var reteta in Model.OrderByDescending(r => r.Data))
                                    {
                                        var daysUntilVisit = reteta.DataUrmatoareiVizite.HasValue ? 
                                            (reteta.DataUrmatoareiVizite.Value - today).Days : (int?)null;
                                        var rowClass = "";
                                        if (daysUntilVisit.HasValue)
                                        {
                                            if (daysUntilVisit < 0) rowClass = "table-row-expired";
                                            else if (daysUntilVisit == 0) rowClass = "table-row-today";
                                            else if (daysUntilVisit <= 7) rowClass = "table-row-soon";
                                        }

                                        <tr class="reteta-row @rowClass"
                                            data-pacient="@(reteta.pacient?.Nume?.ToLower() ?? "") @(reteta.pacient?.Prenume?.ToLower() ?? "")"
                                            data-medicament="@(reteta.medicament?.Nume?.ToLower() ?? "")"
                                            data-serie="@(reteta.Serie?.ToLower() ?? "")"
                                            data-nr="@(reteta.NrReteta?.ToLower() ?? "")"
                                            data-data="@reteta.Data.ToString("yyyy-MM-dd")"
                                            data-vizita="@(reteta.DataUrmatoareiVizite?.ToString("yyyy-MM-dd") ?? "")"
                                            data-has-vizita="@(reteta.DataUrmatoareiVizite.HasValue ? "true" : "false")">
                                            
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="date-badge me-2">
                                                        <div class="date-day">@reteta.Data.Day.ToString("00")</div>
                                                        <div class="date-month">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName(reteta.Data.Month)</div>
                                                    </div>
                                                    <small class="text-muted">@reteta.Data.Year</small>
                                                </div>
                                            </td>
                                            
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-circle me-2">
                                                        @if (reteta.pacient != null)
                                                        {
                                                            <span>@reteta.pacient.Nume.Substring(0, 1)@reteta.pacient.Prenume.Substring(0, 1)</span>
                                                        }
                                                    </div>
                                                    <div>
                                                        <strong>@reteta.pacient?.Nume @reteta.pacient?.Prenume</strong>
                                                        @if (reteta.pacient?.Id != null)
                                                        {
                                                            <br>
                                                            <small class="text-muted">ID: #@reteta.pacient.Id</small>
                                                        }
                                                    </div>
                                                </div>
                                            </td>
                                            
                                            @if (ViewBag.MedicamentNume == null)
                                            {
                                                <td>
                                                    <span class="badge bg-gradient-info text-white">
                                                        <i class="fas fa-pills me-1"></i>@reteta.medicament?.Nume
                                                    </span>
                                                </td>
                                            }
                                            
                                            <td>
                                                @if (!string.IsNullOrEmpty(reteta.Serie))
                                                {
                                                    <code class="text-primary">@reteta.Serie</code>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            
                                            <td>
                                                @if (!string.IsNullOrEmpty(reteta.NrReteta))
                                                {
                                                    <code class="text-primary">@reteta.NrReteta</code>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            
                                            <td>
                                                @if (reteta.DataUrmatoareiVizite.HasValue)
                                                {
                                                    <div class="next-visit-badge">
                                                        <i class="fas fa-calendar-check me-1"></i>
                                                        <span>@reteta.DataUrmatoareiVizite.Value.ToString("dd.MM.yyyy")</span>
                                                        @if (daysUntilVisit.HasValue)
                                                        {
                                                            if (daysUntilVisit == 0)
                                                            {
                                                                <span class="badge bg-warning ms-2">Astăzi</span>
                                                            }
                                                            else if (daysUntilVisit > 0 && daysUntilVisit <= 7)
                                                            {
                                                                <span class="badge bg-info ms-2">@daysUntilVisit zile</span>
                                                            }
                                                            else if (daysUntilVisit < 0)
                                                            {
                                                                <span class="badge bg-danger ms-2">Întârziat</span>
                                                            }
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted fst-italic">
                                                        <i class="fas fa-calendar-times me-1"></i>Neprogramat
                                                    </span>
                                                }
                                            </td>
                                            
                                            <td class="text-center">
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-action="Edit" asp-route-id="@reteta.Id"
                                                       class="btn btn-outline-warning" title="Editează">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-outline-danger"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#deleteModal_@reteta.Id"
                                                            title="Șterge">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-file-medical fa-4x text-muted mb-3"></i>
                        <h4 class="text-muted">Nu există rețete</h4>
                        @if (!string.IsNullOrEmpty(medicamentId))
                        {
                            <a asp-action="Create" asp-route-medId="@medicamentId" class="btn btn-primary mt-3">
                                <i class="fas fa-plus me-1"></i> Adaugă prima rețetă
                            </a>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- No Results Message -->
<div id="noResultsMessage" class="text-center py-5 d-none">
    <div class="card border-0 shadow-sm">
        <div class="card-body py-5">
            <i class="fas fa-search fa-4x text-muted mb-3"></i>
            <h4 class="text-muted">Nu au fost găsite rețete</h4>
            <p class="text-muted">Încearcă să modifici criteriile de filtrare</p>
        </div>
    </div>
</div>

<!-- Delete Modals -->
@foreach (var reteta in Model)
{
    <div class="modal fade" id="deleteModal_@reteta.Id" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Confirmare ștergere
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Vrei să ștergi definitiv această rețetă?</p>
                    <ul class="list-unstyled">
                        <li><strong>Data:</strong> @reteta.Data.ToString("dd.MM.yyyy")</li>
                        <li><strong>Pacient:</strong> @reteta.pacient?.Nume @reteta.pacient?.Prenume</li>
                        <li><strong>Medicament:</strong> @reteta.medicament?.Nume</li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anulează</button>
                    <form asp-action="Delete" asp-controller="Reteta" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@reteta.Id" />
                        <input type="hidden" name="returnMedId" value="@medicamentId" />
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash me-1"></i> Șterge
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchGeneral = document.getElementById('searchGeneral');
            const dateFrom = document.getElementById('dateFrom');
            const dateTo = document.getElementById('dateTo');
            const filterVizite = document.getElementById('filterVizite');
            const sortBy = document.getElementById('sortBy');
            const clearFilters = document.getElementById('clearFilters');
            const quickFilters = document.querySelectorAll('.quick-filter');
            
            const rows = document.querySelectorAll('.reteta-row');
            const tableBody = document.querySelector('#reteteTabel tbody');
            const noResults = document.getElementById('noResultsMessage');
            const tableContainer = document.querySelector('.table-responsive')?.closest('.card');
            const activeFiltersCount = document.getElementById('activeFiltersCount');

            function updateActiveFiltersCount() {
                let count = 0;
                if (searchGeneral.value) count++;
                if (dateFrom.value) count++;
                if (dateTo.value) count++;
                if (filterVizite.value) count++;
                if (sortBy.value !== 'data-desc') count++;
                
                if (count > 0) {
                    activeFiltersCount.textContent = `${count} filtre active`;
                    activeFiltersCount.className = 'badge bg-warning';
                } else {
                    activeFiltersCount.textContent = '';
                }
            }

            function filterAndSort() {
                const searchTerm = searchGeneral.value.toLowerCase();
                const dateFromVal = dateFrom.value;
                const dateToVal = dateTo.value;
                const viziteFilter = filterVizite.value;
                const sortValue = sortBy.value;
                
                const today = new Date();
                today.setHours(0, 0, 0, 0);
                const weekEnd = new Date(today);
                weekEnd.setDate(today.getDate() + 7);
                const monthEnd = new Date(today.getFullYear(), today.getMonth() + 1, 0);
                const nextMonthStart = new Date(today.getFullYear(), today.getMonth() + 1, 1);
                const nextMonthEnd = new Date(today.getFullYear(), today.getMonth() + 2, 0);

                let visibleRows = [];

                rows.forEach(row => {
                    let visible = true;

                    // General search
                    if (searchTerm) {
                        const pacient = row.dataset.pacient;
                        const medicament = row.dataset.medicament;
                        const serie = row.dataset.serie;
                        const nr = row.dataset.nr;
                        
                        if (!pacient.includes(searchTerm) && 
                            !medicament.includes(searchTerm) && 
                            !serie.includes(searchTerm) && 
                            !nr.includes(searchTerm)) {
                            visible = false;
                        }
                    }

                    // Date range filter
                    if (visible && dateFromVal) {
                        if (row.dataset.data < dateFromVal) {
                            visible = false;
                        }
                    }
                    if (visible && dateToVal) {
                        if (row.dataset.data > dateToVal) {
                            visible = false;
                        }
                    }

                    // Visit filter
                    if (visible && viziteFilter) {
                        const hasVizita = row.dataset.hasVizita === 'true';
                        const vizitaDate = row.dataset.vizita ? new Date(row.dataset.vizita) : null;
                        
                        switch (viziteFilter) {
                            case 'cu-vizite':
                                if (!hasVizita) visible = false;
                                break;
                            case 'fara-vizite':
                                if (hasVizita) visible = false;
                                break;
                            case 'saptamana':
                                if (!vizitaDate || vizitaDate < today || vizitaDate > weekEnd) visible = false;
                                break;
                            case 'luna':
                                if (!vizitaDate || vizitaDate < today || vizitaDate > monthEnd) visible = false;
                                break;
                            case 'luna-viitoare':
                                if (!vizitaDate || vizitaDate < nextMonthStart || vizitaDate > nextMonthEnd) visible = false;
                                break;
                        }
                    }

                    if (visible) {
                        row.classList.remove('d-none');
                        visibleRows.push(row);
                    } else {
                        row.classList.add('d-none');
                    }
                });

                // Sort visible rows
                visibleRows.sort((a, b) => {
                    switch (sortValue) {
                        case 'data-asc':
                            return new Date(a.dataset.data) - new Date(b.dataset.data);
                        case 'pacient-asc':
                            return a.dataset.pacient.localeCompare(b.dataset.pacient);
                        case 'pacient-desc':
                            return b.dataset.pacient.localeCompare(a.dataset.pacient);
                        case 'vizita-asc':
                            // Put rows without visits at the end
                            const dateA = a.dataset.vizita || '9999-12-31';
                            const dateB = b.dataset.vizita || '9999-12-31';
                            return dateA.localeCompare(dateB);
                        case 'vizita-desc':
                            // Put rows without visits at the end
                            const dateC = a.dataset.vizita || '0000-01-01';
                            const dateD = b.dataset.vizita || '0000-01-01';
                            return dateD.localeCompare(dateC);
                        default: // data-desc
                            return new Date(b.dataset.data) - new Date(a.dataset.data);
                    }
                });

                // Reorder rows in table
                visibleRows.forEach(row => {
                    tableBody.appendChild(row);
                });

                // Show/hide no results
                if (visibleRows.length === 0 && rows.length > 0) {
                    noResults.classList.remove('d-none');
                    if (tableContainer) tableContainer.classList.add('d-none');
                } else {
                    noResults.classList.add('d-none');
                    if (tableContainer) tableContainer.classList.remove('d-none');
                }

                updateActiveFiltersCount();
            }

            // Quick filters
            quickFilters.forEach(btn => {
                btn.addEventListener('click', function() {
                    // Remove active class from all
                    quickFilters.forEach(b => b.classList.remove('active'));
                    this.classList.add('active');

                    const filter = this.dataset.filter;
                    
                    // Reset other filters
                    searchGeneral.value = '';
                    dateFrom.value = '';
                    dateTo.value = '';
                    
                    switch (filter) {
                        case 'today':
                            const today = new Date().toISOString().split('T')[0];
                            dateFrom.value = today;
                            dateTo.value = today;
                            break;
                        case 'this-week':
                            filterVizite.value = 'saptamana';
                            break;
                        case 'this-month':
                            filterVizite.value = 'luna';
                            break;
                        case 'next-month':
                            filterVizite.value = 'luna-viitoare';
                            break;
                        case 'no-visits':
                            filterVizite.value = 'fara-vizite';
                            break;
                    }
                    
                    filterAndSort();
                });
            });

            // Event listeners
            searchGeneral.addEventListener('input', filterAndSort);
            dateFrom.addEventListener('change', filterAndSort);
            dateTo.addEventListener('change', filterAndSort);
            filterVizite.addEventListener('change', filterAndSort);
            sortBy.addEventListener('change', filterAndSort);

            clearFilters.addEventListener('click', function() {
                searchGeneral.value = '';
                dateFrom.value = '';
                dateTo.value = '';
                filterVizite.value = '';
                sortBy.value = 'data-desc';
                quickFilters.forEach(btn => btn.classList.remove('active'));
                filterAndSort();
            });

            // Initial sort
            filterAndSort();
        });
    </script>
}

<style>
    /* Enhanced table styling */
    .table {
        font-size: 0.9rem;
    }

    .table thead th {
        border: none !important;
        font-weight: 600;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        padding: 1rem 0.75rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
        color: white !important;
    }

    .table tbody td {
        vertical-align: middle;
        padding: 0.75rem;
        border-color: #f1f3f5;
    }

    /* Row status colors */
    .table-row-expired {
        background-color: rgba(220, 53, 69, 0.05);
    }

    .table-row-today {
        background-color: rgba(255, 193, 7, 0.1);
        font-weight: 500;
    }

    .table-row-soon {
        background-color: rgba(13, 202, 240, 0.05);
    }

    .reteta-row:hover {
        background-color: rgba(0, 123, 255, 0.05) !important;
        transform: translateX(2px);
        transition: all 0.2s ease;
    }

    /* Date badge styling */
    .date-badge {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 4px 8px;
        text-align: center;
        min-width: 45px;
        border: 1px solid #dee2e6;
    }

    .date-day {
        font-weight: 700;
        font-size: 1.1rem;
        color: #495057;
    }

    .date-month {
        font-size: 0.7rem;
        text-transform: uppercase;
        color: #6c757d;
    }

    /* Avatar circle */
    .avatar-circle {
        width: 35px;
        height: 35px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        font-size: 0.8rem;
    }

    /* Enhanced badges */
    .badge {
        padding: 0.35em 0.65em;
        font-weight: 500;
    }

    .bg-gradient-info {
        background: linear-gradient(135deg, #0dcaf0 0%, #0aa2c0 100%);
    }

    /* Filter card styling */
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .card {
        border-radius: 12px;
        overflow: hidden;
    }

    .card-header {
        border: none;
        font-weight: 600;
    }

    /* Input styling */
    .form-control, .form-select {
        border-radius: 8px;
        border: 1px solid #dee2e6;
        font-size: 0.9rem;
    }

    .form-control:focus, .form-select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    .input-group-text {
        background-color: white;
        border-right: none;
    }

    .form-control.border-start-0 {
        border-left: none;
    }

    /* Button styling */
    .btn-group-sm .btn {
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
        border-radius: 6px !important;
        margin: 0 2px;
    }

    .btn-outline-warning:hover {
        color: #fff;
    }

    .btn-outline-danger:hover {
        color: #fff;
    }

    /* Quick filter pills */
    .quick-filter {
        border-radius: 20px;
        padding: 0.375rem 0.875rem;
        font-weight: 500;
        transition: all 0.2s ease;
    }

    .quick-filter:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .quick-filter.active {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }

    /* Next visit badge */
    .next-visit-badge {
        font-size: 0.9rem;
    }

    /* Code styling */
    code {
        padding: 0.2rem 0.4rem;
        font-size: 0.875rem;
        background-color: rgba(102, 126, 234, 0.1);
        border-radius: 4px;
    }

    /* Shadow utilities */
    .shadow-sm {
        box-shadow: 0 0.125rem 0.5rem rgba(0, 0, 0, 0.075) !important;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .table {
            font-size: 0.8rem;
        }
        
        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
    }
</style>