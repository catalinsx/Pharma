@model IEnumerable<pharma.Models.Pacient>

@{
    ViewData["Title"] = "Lista pacienți";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-users me-2"></i>
            Lista pacienți
        </h2>
        <p class="text-muted mb-0">@Model.Count() pacienți înregistrați</p>
    </div>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-user-plus me-1"></i> Adaugă pacient
    </a>
</div>

<!-- Căutare și filtrare -->
<div class="card mb-4">
    <div class="card-header">
        <h6 class="mb-0">
            <i class="fas fa-search me-2"></i>
            Căutare și filtrare
        </h6>
    </div>
    <div class="card-body">
        <div class="row g-3">
            <div class="col-md-4">
                <label for="searchGeneral" class="form-label">Căutare generală</label>
                <input type="text" id="searchGeneral" class="form-control"
                       placeholder="Nume, prenume, CNP, telefon...">
            </div>
            <div class="col-md-3">
                <label for="filterMedicament" class="form-label">Medicament</label>
                <select id="filterMedicament" class="form-select">
                    <option value="">Toate medicamentele</option>
                    @{
                        var allMedicaments = Model.SelectMany(p => p.PacientMedicamente.Select(pm => pm.Medicament))
                        .Distinct()
                        .OrderBy(m => m.Nume);
                    }
                    @foreach (var med in allMedicaments)
                    {
                        <option value="@med.Id">@med.Nume</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label for="filterRetete" class="form-label">Rețete</label>
                <select id="filterRetete" class="form-select">
                    <option value="">Toți pacienții</option>
                    <option value="cu-retete">Cu rețete</option>
                    <option value="fara-retete">Fără rețete</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="sortBy" class="form-label">Sortare</label>
                <select id="sortBy" class="form-select">
                    <option value="nume-asc">Nume (A-Z)</option>
                    <option value="nume-desc">Nume (Z-A)</option>
                    <option value="retete-desc">Cele mai multe rețete</option>
                    <option value="retete-asc">Cele mai puține rețete</option>
                    <option value="recent">Adăugați recent</option>
                </select>
            </div>
            <div class="col-md-1">
                <label class="form-label">&nbsp;</label>
                <button type="button" id="clearFilters" class="btn btn-outline-secondary w-100">
                    <i class="fas fa-eraser"></i>
                </button>
            </div>
        </div>

        <!-- Quick stats -->
        <div class="row mt-3">
            <div class="col">
                <div class="d-flex gap-3 text-center">
                    <div class="badge bg-primary p-2">
                        <span class="d-block h6 mb-0" id="statsTotal">@Model.Count()</span>
                        <small>Total</small>
                    </div>
                    <div class="badge bg-success p-2">
                        <span class="d-block h6 mb-0" id="statsCuRetete">@Model.Count(p => p.Retete.Any())</span>
                        <small>Cu rețete</small>
                    </div>
                    <div class="badge bg-info p-2">
                        <span class="d-block h6 mb-0" id="statsVisible">@Model.Count()</span>
                        <small>Afișați</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Lista pacienți în format tabel -->
<div class="card">
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover mb-0" id="patientsTable">
                <thead class="table-light">
                    <tr>
                        <th width="5%"><i class="fas fa-user"></i></th>
                        <th width="25%">Pacient</th>
                        <th width="15%">Contact</th>
                        <th width="20%">Medicamente</th>
                        <th width="10%" class="text-center">Rețete</th>
                        <th width="15%">Următoarea vizită</th>
                        <th width="10%" class="text-center">Acțiuni</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var pacient in Model)
                    {
                        var urmatoareaVizita = pacient.Retete
                        .Where(r => r.DataUrmatoareiVizite.HasValue)
                        .OrderBy(r => r.DataUrmatoareiVizite.Value)
                        .FirstOrDefault();

                        <tr class="patient-row"
                            data-id="@pacient.Id"
                            data-nume="@pacient.Nume.ToLower()"
                            data-prenume="@pacient.Prenume.ToLower()"
                            data-cnp="@(pacient.CNP ?? "")"
                            data-telefon="@(pacient.NrTelefon ?? "")"
                            data-medicamente="@string.Join(",", pacient.PacientMedicamente.Select(pm => pm.MedicamentId))"
                            data-retete-count="@pacient.Retete.Count"
                            data-next-visit="@(urmatoareaVizita?.DataUrmatoareiVizite?.ToString("yyyy-MM-dd") ?? "")"
                            data-has-retete="@(pacient.Retete.Any() ? "true" : "false")">

                            <!-- Avatar -->
                            <td>
                                <span class="badge bg-primary rounded-pill avatar-badge">
                                    @pacient.Nume.Substring(0, 1)@pacient.Prenume.Substring(0, 1)
                                </span>
                            </td>

                            <!-- Pacient Info -->
                            <td>
                                <div>
                                    <strong>@pacient.Nume @pacient.Prenume</strong>
                                    @if (!string.IsNullOrEmpty(pacient.CNP))
                                    {
                                        <br>
                                        <small class="text-muted">CNP: @pacient.CNP</small>
                                    }
                                </div>
                            </td>

                            <!-- Contact -->
                            <td>
                                @if (!string.IsNullOrEmpty(pacient.NrTelefon))
                                {
                                    <i class="fas fa-phone me-1"></i>
                                    @pacient.NrTelefon
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </td>

                            <!-- Medicamente -->
                            <td>
                                @if (pacient.PacientMedicamente.Any())
                                {
                                    <div class="d-flex flex-wrap gap-1">
                                        @foreach (var pm in pacient.PacientMedicamente.Take(2))
                                        {
                                            <span class="badge bg-light text-dark small">@pm.Medicament.Nume</span>
                                        }
                                        @if (pacient.PacientMedicamente.Count > 2)
                                        {
                                            <span class="badge bg-secondary small">+@(pacient.PacientMedicamente.Count - 2)</span>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <span class="text-muted">Fără medicamente</span>
                                }
                            </td>

                            <!-- Rețete Count -->
                            <td class="text-center">
                                <span class="badge @(pacient.Retete.Count > 0 ? "bg-success" : "bg-secondary")">
                                    @pacient.Retete.Count
                                </span>
                            </td>

                            <!-- Următoarea vizită - SIMPLIFICAT -->
                            <td>
                                @if (urmatoareaVizita != null)
                                {
                                    <span class="text-info">
                                        @urmatoareaVizita.DataUrmatoareiVizite?.ToString("dd.MM.yyyy")
                                    </span>
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </td>

                            <!-- Acțiuni -->
                            <td class="text-center">
                                <div class="btn-group" role="group">
                                    <button class="btn btn-outline-primary btn-sm"
                                            onclick="showPatientDetails(@pacient.Id)"
                                            title="Vezi detalii">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <a asp-action="Edit" asp-route-id="@pacient.Id"
                                       class="btn btn-outline-secondary btn-sm"
                                       title="Editează">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-success btn-sm dropdown-toggle"
                                                data-bs-toggle="dropdown" title="Rețetă nouă">
                                            <i class="fas fa-file-medical"></i>
                                        </button>
                                        @if (pacient.PacientMedicamente.Any())
                                        {
                                            <ul class="dropdown-menu">
                                                @foreach (var pm in pacient.PacientMedicamente)
                                                {
                                                    <li>
                                                        <a class="dropdown-item"
                                                           asp-controller="Reteta"
                                                           asp-action="Create"
                                                           asp-route-pacientId="@pacient.Id"
                                                           asp-route-medicamentId="@pm.MedicamentId">
                                                            <i class="fas fa-pills me-2"></i>@pm.Medicament.Nume
                                                        </a>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <ul class="dropdown-menu">
                                                <li><span class="dropdown-item-text text-muted">Nu are medicamente asociate</span></li>
                                            </ul>
                                        }
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- No results message -->
<div id="noResults" class="text-center py-5 d-none">
    <i class="fas fa-search fa-3x text-muted mb-3"></i>
    <h4 class="text-muted">Nu au fost găsiți pacienți</h4>
    <p class="text-muted">Încearcă să modifici criteriile de căutare</p>
</div>

<!-- Modal pentru detalii pacient -->
<div class="modal fade" id="patientDetailsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-user me-2"></i>
                    Detalii pacient
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="patientDetailsContent">
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Se încarcă...</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Închide</button>
                <button type="button" id="editPatientBtn" class="btn btn-primary">
                    <i class="fas fa-edit me-1"></i> Editează pacientul
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchGeneral = document.getElementById('searchGeneral');
            const filterMedicament = document.getElementById('filterMedicament');
            const filterRetete = document.getElementById('filterRetete');
            const sortBy = document.getElementById('sortBy');
            const clearFilters = document.getElementById('clearFilters');
            const patientRows = document.querySelectorAll('.patient-row');
            const patientsTable = document.getElementById('patientsTable');
            const noResults = document.getElementById('noResults');
            const statsVisible = document.getElementById('statsVisible');

            function filterAndSort() {
                const searchTerm = searchGeneral.value.toLowerCase();
                const medicamentId = filterMedicament.value;
                const reteteFiler = filterRetete.value;
                const sortValue = sortBy.value;

                let visibleRows = [];

                patientRows.forEach(row => {
                    let visible = true;

                    // General search
                    if (searchTerm) {
                        const nume = row.dataset.nume;
                        const prenume = row.dataset.prenume;
                        const cnp = row.dataset.cnp;
                        const telefon = row.dataset.telefon;

                        if (!nume.includes(searchTerm) &&
                            !prenume.includes(searchTerm) &&
                            !cnp.includes(searchTerm) &&
                            !telefon.includes(searchTerm)) {
                            visible = false;
                        }
                    }

                    // Medicament filter
                    if (medicamentId && visible) {
                        const medicamente = row.dataset.medicamente.split(',');
                        if (!medicamente.includes(medicamentId)) {
                            visible = false;
                        }
                    }

                    // Retete filter
                    if (reteteFiler && visible) {
                        const hasRetete = row.dataset.hasRetete === 'true';
                        if ((reteteFiler === 'cu-retete' && !hasRetete) ||
                            (reteteFiler === 'fara-retete' && hasRetete)) {
                            visible = false;
                        }
                    }

                    if (visible) {
                        row.classList.remove('d-none');
                        visibleRows.push(row);
                    } else {
                        row.classList.add('d-none');
                    }
                });

                // Sort visible rows
                visibleRows.sort((a, b) => {
                    switch (sortValue) {
                        case 'nume-desc':
                            return (b.dataset.nume + b.dataset.prenume).localeCompare(a.dataset.nume + a.dataset.prenume);
                        case 'retete-desc':
                            return parseInt(b.dataset.retetesCount) - parseInt(a.dataset.retetesCount);
                        case 'retete-asc':
                            return parseInt(a.dataset.retetesCount) - parseInt(b.dataset.retetesCount);
                        case 'recent':
                            return parseInt(b.dataset.id) - parseInt(a.dataset.id);
                        default: // nume-asc
                            return (a.dataset.nume + a.dataset.prenume).localeCompare(b.dataset.nume + b.dataset.prenume);
                    }
                });

                // Reorder rows in DOM
                const tbody = patientsTable.querySelector('tbody');
                visibleRows.forEach(row => {
                    tbody.appendChild(row);
                });

                // Update visible count
                statsVisible.textContent = visibleRows.length;

                // Show/hide no results
                if (visibleRows.length === 0) {
                    noResults.classList.remove('d-none');
                    patientsTable.classList.add('d-none');
                } else {
                    noResults.classList.add('d-none');
                    patientsTable.classList.remove('d-none');
                }
            }

            // Event listeners
            searchGeneral.addEventListener('input', filterAndSort);
            filterMedicament.addEventListener('change', filterAndSort);
            filterRetete.addEventListener('change', filterAndSort);
            sortBy.addEventListener('change', filterAndSort);

            clearFilters.addEventListener('click', function () {
                searchGeneral.value = '';
                filterMedicament.value = '';
                filterRetete.value = '';
                sortBy.value = 'nume-asc';
                filterAndSort();
            });

            // Initial sort
            filterAndSort();
        });

        // Funcție pentru afișarea detaliilor în modal
        async function showPatientDetails(patientId) {
            const modal = new bootstrap.Modal(document.getElementById('patientDetailsModal'));
            const content = document.getElementById('patientDetailsContent');
            const editBtn = document.getElementById('editPatientBtn');

            // Show loading
            content.innerHTML = `
                                <div class="text-center">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">Se încarcă...</span>
                                    </div>
                                </div>`;

            modal.show();

            try {
                const response = await fetch(`/Pacient/GetDetails/${patientId}`);
                const data = await response.json();

                content.innerHTML = `
                                    <div class="row">
                                        <div class="col-md-6">
                                            <h6 class="text-muted">Informații personale</h6>
                                            <table class="table table-sm">
                                                <tr>
                                                    <td><strong>Nume complet:</strong></td>
                                                    <td>${data.nume} ${data.prenume}</td>
                                                </tr>
                                                ${data.cnp ? `<tr><td><strong>CNP:</strong></td><td>${data.cnp}</td></tr>` : ''}
                                                ${data.nrTelefon ? `<tr><td><strong>Telefon:</strong></td><td>${data.nrTelefon}</td></tr>` : ''}
                                            </table>

                                            ${data.alteDetalii ? `
                                            <h6 class="text-muted mt-3">Alte detalii</h6>
                                            <div class="alert alert-light">
                                                ${data.alteDetalii}
                                            </div>` : ''}

                                            ${data.urmatoareaVizita ? `
                                            <h6 class="text-muted mt-3">Următoarea vizită</h6>
                                            <div class="alert alert-info">
                                                <i class="fas fa-calendar me-2"></i>
                                                ${data.urmatoareaVizita}
                                            </div>` : ''}
                                        </div>

                                        <div class="col-md-6">
                                            <h6 class="text-muted">Medicamente asociate</h6>
                                            ${data.medicamente.length > 0 ? `
                                                <div class="d-flex flex-wrap gap-1 mb-3">
                                                    ${data.medicamente.map(m => `<span class="badge bg-info">${m.nume}</span>`).join('')}
                                                </div>
                                            ` : '<p class="text-muted">Nu are medicamente asociate</p>'}
                                        </div>
                                    </div>

                                    ${data.retete.length > 0 ? `
                                    <div class="row mt-3">
                                        <div class="col">
                                            <h6 class="text-muted">Rețete recente (ultimele 5)</h6>
                                            <div class="table-responsive">
                                                <table class="table table-sm">
                                                    <thead>
                                                        <tr>
                                                            <th>Data</th>
                                                            <th>Medicament</th>
                                                            <th>Serie</th>
                                                            <th>Nr. rețetă</th>
                                                            <th>Următoarea vizită</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        ${data.retete.slice(0, 5).map(r => `
                                                            <tr>
                                                                <td>${r.data}</td>
                                                                <td><span class="badge bg-light text-dark">${r.medicament}</span></td>
                                                                <td>${r.serie || '-'}</td>
                                                                <td>${r.nrReteta || '-'}</td>
                                                                <td>${r.dataUrmatoareiVizite || '-'}</td>
                                                            </tr>
                                                        `).join('')}
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                    ` : ''}`;

                editBtn.onclick = () => {
                    window.location.href = `/Pacient/Edit/${patientId}`;
                };

            } catch (error) {
                content.innerHTML = `
                                    <div class="alert alert-danger">
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        Eroare la încărcarea datelor pacientului.
                                    </div>`;
            }
        }
    </script>
}

<style>
    .patient-row:hover {
        background-color: #f8f9fa;
    }

    .avatar-badge {
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.8rem;
        font-weight: bold;
    }

    .badge.bg-light {
        border: 1px solid #dee2e6;
    }

    .btn-group .btn {
        border-radius: 0.25rem !important;
    }

        .btn-group .btn + .btn {
            margin-left: 2px;
        }

    .table th {
        border-top: none;
        font-weight: 600;
        font-size: 0.9rem;
        color: #495057;
    }

    .table td {
        vertical-align: middle;
        font-size: 0.9rem;
    }
</style>