@model pharma.Models.PacientCreateViewModel

@{
    ViewData["Title"] = "Adaugă pacient";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">Adaugă pacient nou</h2>
        <p class="text-muted mb-0">Completează informațiile pacientului</p>
    </div>
    <a asp-action="Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left me-1"></i> Înapoi la listă
    </a>
</div>

<form asp-action="Create" method="post" novalidate>
    <div class="row">
        <div class="col-lg-7">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-user me-2"></i>
                        Informații personale
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Nume" class="form-label">
                                    Nume de familie <span class="text-danger">*</span>
                                </label>
                                <input asp-for="Nume" class="form-control" id="numeInput" />
                                <span asp-validation-for="Nume" class="text-danger"></span>
                                <div class="form-text">Prima literă va fi transformată în majusculă</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Prenume" class="form-label">
                                    Prenume <span class="text-danger">*</span>
                                </label>
                                <input asp-for="Prenume" class="form-control" id="prenumeInput" />
                                <span asp-validation-for="Prenume" class="text-danger"></span>
                                <div class="form-text">Prima literă va fi transformată în majusculă</div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="CNP" class="form-label">
                                    CNP <span class="text-muted">(opțional)</span>
                                </label>
                                <input asp-for="CNP" class="form-control" maxlength="13" id="cnpInput" />
                                <span asp-validation-for="CNP" class="text-danger"></span>
                                <div class="form-text">13 cifre - ajută la diferențierea pacienților cu același nume</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="NrTelefon" class="form-label">
                                    Număr de telefon <span class="text-muted">(opțional)</span>
                                </label>
                                <input asp-for="NrTelefon" class="form-control" id="telefonInput" placeholder="Ex: 0721234567" />
                                <span asp-validation-for="NrTelefon" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="AlteDetalii" class="form-label">
                            Alte detalii <span class="text-muted">(opțional)</span>
                        </label>
                        <textarea asp-for="AlteDetalii"
                                  id="alteDetaliiInput"
                                  class="form-control"
                                  rows="4"
                                  placeholder="Alergii, condiții medicale, observații speciale... (apasă Enter pentru linie nouă)"></textarea>
                        <span asp-validation-for="AlteDetalii" class="text-danger"></span>
                        <div class="form-text">
                            <span id="charCount">0</span>/1000 caractere
                        </div>
                    </div>

                    <!-- Butoane mutate aici sub informații personale -->
                    <div class="d-flex justify-content-between border-top pt-3">
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-times me-1"></i> Anulează
                        </a>
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-save me-1"></i> Salvează pacientul
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Medicamente asociate cu checkbox-uri mai vizibile -->
        <div class="col-lg-5">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-pills me-2"></i>
                        Medicamente asociate
                    </h6>
                </div>
                <div class="card-body">
                    @if (Model.AvailableMedicamente.Any())
                    {
                        <div class="mb-3">
                            <input type="text" id="searchMedicamente" class="form-control"
                                   placeholder="Caută medicamente...">
                        </div>

                        <!-- Lista de medicamente cu checkbox-uri mai vizibile -->
                        <div id="medicamenteList" style="max-height: 400px; overflow-y: auto;">
                            @foreach (var medicament in Model.AvailableMedicamente)
                            {
                                <div class="medicament-item mb-2 p-2 border rounded" data-name="@medicament.Nume.ToLower()">
                                    <div class="form-check">
                                        <input class="form-check-input medicament-checkbox"
                                               type="checkbox"
                                               name="SelectedMedicamentIds"
                                               value="@medicament.Id"
                                               id="med_@medicament.Id"
                                               style="width: 1.2em; height: 1.2em;">
                                        <label class="form-check-label w-100 cursor-pointer ms-2" for="med_@medicament.Id">
                                            <strong>@medicament.Nume</strong>
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Counter pentru medicamente selectate -->
                        <div class="mt-3 text-center">
                            <span id="selectedCount" class="badge bg-info">0 selectate</span>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-pills fa-3x text-muted mb-3"></i>
                            <h6 class="text-muted">Nu există medicamente în sistem</h6>
                            <p class="text-muted small mb-3">Trebuie să adaugi medicamente înainte de a putea crea pacienți</p>
                            <a asp-controller="Medicament" asp-action="Create" class="btn btn-primary">
                                <i class="fas fa-plus me-1"></i> Adaugă primul medicament
                            </a>
                        </div>
                    }
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-info-circle me-2"></i>
                        Informații
                    </h6>
                </div>
                <div class="card-body">
                    <div class="alert alert-info">
                        <i class="fas fa-lightbulb me-2"></i>
                        <strong>Sfat:</strong> Completează CNP-ul pentru a evita duplicatele când există pacienți cu același nume.
                    </div>

                    <div class="small text-muted">
                        <p class="mb-1"><strong>Câmpuri obligatorii:</strong></p>
                        <ul class="mb-0 ps-3">
                            <li>Nume de familie</li>
                            <li>Prenume</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const numeInput = document.getElementById('numeInput');
            const prenumeInput = document.getElementById('prenumeInput');
            const cnpInput = document.getElementById('cnpInput');
            const telefonInput = document.getElementById('telefonInput');
            const alteDetaliiInput = document.getElementById('alteDetaliiInput');
            const searchMedicamente = document.getElementById('searchMedicamente');
            const medicamenteItems = document.querySelectorAll('.medicament-item');
            const medicamenteCheckboxes = document.querySelectorAll('.medicament-checkbox');
            const selectedCount = document.getElementById('selectedCount');
            const charCount = document.getElementById('charCount');

            // Capitalize first letter functionality
            function capitalizeFirstLetter(input) {
                input.addEventListener('blur', function () {
                    if (this.value) {
                        this.value = this.value.charAt(0).toUpperCase() + this.value.slice(1).toLowerCase();
                    }
                });
            }

            if (numeInput) capitalizeFirstLetter(numeInput);
            if (prenumeInput) capitalizeFirstLetter(prenumeInput);

            // CNP validation - only numbers
            if (cnpInput) {
                cnpInput.addEventListener('input', function () {
                    this.value = this.value.replace(/\D/g, '');
                    if (this.value.length > 13) {
                        this.value = this.value.slice(0, 13);
                    }
                });
            }

            // Phone number formatting
            if (telefonInput) {
                telefonInput.addEventListener('input', function () {
                    let value = this.value.replace(/\D/g, '');
                    if (value.length > 10) {
                        value = value.slice(0, 10);
                    }
                    this.value = value;
                });
            }

            // Character counter for AlteDetalii - preserve line breaks
            if (alteDetaliiInput && charCount) {
                alteDetaliiInput.addEventListener('input', function () {
                    const currentLength = this.value.length;
                    charCount.textContent = currentLength;

                    if (currentLength > 900) {
                        charCount.parentNode.classList.add('text-warning');
                    } else {
                        charCount.parentNode.classList.remove('text-warning');
                    }

                    if (currentLength >= 1000) {
                        charCount.parentNode.classList.add('text-danger');
                        charCount.parentNode.classList.remove('text-warning');
                    } else {
                        charCount.parentNode.classList.remove('text-danger');
                    }
                });

                // Preserve formatting when displaying
                alteDetaliiInput.addEventListener('keydown', function (e) {
                    // Allow Enter key for new lines
                    if (e.key === 'Enter') {
                        // Don't prevent default - let the new line be added
                        return true;
                    }
                });
            }

            // Search medicamente functionality
            if (searchMedicamente && medicamenteItems.length > 0) {
                searchMedicamente.addEventListener('input', function () {
                    const searchTerm = this.value.toLowerCase();

                    medicamenteItems.forEach(item => {
                        const name = item.dataset.name;
                        if (name.includes(searchTerm)) {
                            item.style.display = 'block';
                        } else {
                            item.style.display = 'none';
                        }
                    });

                    updateSelectedCount();
                });
            }

            // Counter pentru medicamente selectate
            function updateSelectedCount() {
                if (selectedCount && medicamenteCheckboxes.length > 0) {
                    const checked = Array.from(medicamenteCheckboxes).filter(cb => cb.checked).length;
                    selectedCount.textContent = `${checked} selectate`;
                    selectedCount.className = checked > 0 ? 'badge bg-success' : 'badge bg-info';
                }
            }

            // Visual feedback pentru elemente selectate
            if (medicamenteCheckboxes.length > 0) {
                medicamenteCheckboxes.forEach(checkbox => {
                    checkbox.addEventListener('change', function () {
                        const item = this.closest('.medicament-item');
                        if (this.checked) {
                            item.classList.add('selected');
                        } else {
                            item.classList.remove('selected');
                        }
                        updateSelectedCount();
                    });
                });
            }

            // Form validation enhancement
            const form = document.querySelector('form');
            form.addEventListener('submit', function (e) {
                const checkedBoxes = Array.from(medicamenteCheckboxes).filter(cb => cb.checked);
                if (checkedBoxes.length === 0) {
                    e.preventDefault();
                    alert('Te rog să selectezi cel puțin un medicament pentru acest pacient.');
                    return false;
                }
            });

            // Initialize count
            updateSelectedCount();
        });
    </script>
}

<style>
    /* Stiluri pentru elementele de medicamente mai vizibile */
    .medicament-item {
        transition: all 0.2s ease;
        background-color: #f8f9fa;
        border: 1px solid #dee2e6 !important;
    }

        .medicament-item:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            background-color: #fff;
        }

        .medicament-item.selected {
            border-color: #198754 !important;
            background-color: #d1f2eb;
            border-width: 2px !important;
        }

        .medicament-item .form-check {
            margin-bottom: 0;
        }

        .medicament-item .form-check-label {
            cursor: pointer;
            font-size: 0.95rem;
        }

    .cursor-pointer {
        cursor: pointer;
    }

    .card-header h5, .card-header h6 {
        color: #495057;
    }

    .text-danger {
        font-size: 0.875em;
    }

    .form-text {
        font-size: 0.8em;
        color: #6c757d;
    }

    .alert-info {
        border-left: 4px solid #0dcaf0;
    }

    /* Custom scrollbar for medicines list */
    #medicamenteList {
        scrollbar-width: thin;
        scrollbar-color: #dee2e6 transparent;
    }

        #medicamenteList::-webkit-scrollbar {
            width: 8px;
        }

        #medicamenteList::-webkit-scrollbar-track {
            background: #f8f9fa;
            border-radius: 4px;
        }

        #medicamenteList::-webkit-scrollbar-thumb {
            background-color: #dee2e6;
            border-radius: 4px;
        }

            #medicamenteList::-webkit-scrollbar-thumb:hover {
                background-color: #adb5bd;
            }

    /* Selected count badge animation */
    #selectedCount {
        transition: all 0.3s ease;
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
    }

    /* Preserve whitespace in AlteDetalii textarea */
    #alteDetaliiInput {
        white-space: pre-wrap;
    }

    .btn-primary.btn-lg {
        padding: 0.5rem 1.5rem;
    }
</style>